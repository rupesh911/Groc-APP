[{"C:\\Users\\hp\\Desktop\\project1\\client\\src\\index.js":"1","C:\\Users\\hp\\Desktop\\project1\\client\\src\\App.js":"2","C:\\Users\\hp\\Desktop\\project1\\client\\src\\components\\itemAdder.js":"3","C:\\Users\\hp\\Desktop\\project1\\client\\src\\components\\ShowMonth.js":"4","C:\\Users\\hp\\Desktop\\project1\\client\\src\\components\\Navbar.js":"5","C:\\Users\\hp\\Desktop\\project1\\client\\src\\components\\itemList.js":"6"},{"size":230,"mtime":1635513356263,"results":"7","hashOfConfig":"8"},{"size":433,"mtime":1635513356247,"results":"9","hashOfConfig":"8"},{"size":2286,"mtime":1635513356255,"results":"10","hashOfConfig":"8"},{"size":441,"mtime":1635513356253,"results":"11","hashOfConfig":"8"},{"size":235,"mtime":1635513356251,"results":"12","hashOfConfig":"8"},{"size":2684,"mtime":1635513356257,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"eoxk0q",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hp\\Desktop\\project1\\client\\src\\index.js",[],"C:\\Users\\hp\\Desktop\\project1\\client\\src\\App.js",[],"C:\\Users\\hp\\Desktop\\project1\\client\\src\\components\\itemAdder.js",["27","28"],"import AddIcon from \"@material-ui/icons/Add\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Axios from 'axios'\r\nimport ItemList from \"./itemList\";\r\nimport React, { useEffect } from 'react'\r\nimport { createStyles, makeStyles, Paper, IconButton,  InputBase,} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    searchBox: {\r\n      top: \"1rem\",\r\n      marginRight: \"1em\",\r\n    },\r\n    listRoot: {\r\n      width: \"100%\",\r\n      maxWidth: 450,\r\n      backgroundColor: theme.palette.background.paper,\r\n      position: \"relative\",\r\n      overflow: \"auto\",\r\n      maxHeight: 300,\r\n      marginTop:'0.3em'\r\n    },\r\n    root: {\r\n      \r\n      padding: \"2px 4px\",\r\n      display: \"flex\",\r\n      width: 400,\r\n    },\r\n    input: {\r\n      marginLeft: theme.spacing(1),\r\n      flex: 1,\r\n    },\r\n    iconButton: {\r\n      padding: 10,\r\n    },\r\n    divider: {\r\n      height: 28,\r\n      margin: 4,\r\n    },\r\n    listSection: {\r\n    },\r\n    ul: {\r\n      height:'1em',\r\n      color:'black',\r\n      padding: 0,\r\n    },\r\n  })\r\n);\r\n\r\nconst ItemAdder = () => {\r\n  const classes = useStyles();\r\n  const [input, setInput] = React.useState('')\r\n  const [items, setItems] = React.useState([])\r\n  const addItem = () => {\r\n    const data = { grocceryItem: input }\r\n\r\n    Axios.post('http://localhost:8000/groccery/add', data).then(response => {\r\n      setInput(\" \")\r\n    })\r\n  }\r\n  useEffect(async () => {\r\n    let data = await Axios.get('http://localhost:8000/groccery/getAll').then(response => {\r\n      setItems(response.data)\r\n    })\r\n  }, [items])\r\n  return (\r\n    <div>\r\n      <Paper component=\"form\" className={classes.root}>\r\n        <InputBase\r\n          className={classes.input}\r\n          placeholder=\"Add Shoping Items\"\r\n          onChange={(e) => {\r\n            setInput(e.target.value)\r\n          }}\r\n          value={input}\r\n        />\r\n        <Divider className={classes.divider} orientation=\"vertical\" />\r\n        <IconButton\r\n          color=\"primary\"\r\n          className={classes.iconButton}\r\n          aria-label=\"directions\"\r\n          onClick={() => {\r\n            addItem()\r\n          }}\r\n        >\r\n          <AddIcon />\r\n        </IconButton>\r\n      </Paper>\r\n      <ItemList items={items} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ItemAdder","C:\\Users\\hp\\Desktop\\project1\\client\\src\\components\\ShowMonth.js",[],"C:\\Users\\hp\\Desktop\\project1\\client\\src\\components\\Navbar.js",[],"C:\\Users\\hp\\Desktop\\project1\\client\\src\\components\\itemList.js",[],{"ruleId":"29","severity":1,"message":"30","line":61,"column":13,"nodeType":"31","endLine":65,"endColumn":4},{"ruleId":"32","severity":1,"message":"33","line":62,"column":9,"nodeType":"34","messageId":"35","endLine":62,"endColumn":13},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar"]